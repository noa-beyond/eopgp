---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: block-ssd
provisioner: cinder.csi.openstack.org
parameters:
  type: ssd
reclaimPolicy: Delete
volumeBindingMode: Immediate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka2-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce  
  resources:
    requests:
      storage: 2Gi
  storageClassName: block-ssd
---
apiVersion: v1
kind: Service
metadata:
  name: kafka2
  namespace: default
spec:
  selector:
    app: kafka2
  ports:
    - name: external
      port: 8098
      targetPort: 8098
    - name: internal
      port: 9092
      targetPort: 9092
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka2
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka2
  template:
    metadata:
      labels:
        app: kafka2
    spec:
      containers:
        - name: kafka
          image: confluentinc/cp-kafka:7.2.1
          resources:
            requests:
              cpu: "250m"
            limits:
              cpu: "500m"          
          ports:
            - containerPort: 8098
            - containerPort: 9092
          env:
            - name: KAFKA_BROKER_ID
              value: "2"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zk-0.zk-hs.default.svc.cluster.local:2181,zk-1.zk-hs.default.svc.cluster.local:2181,zk-2.zk-hs.default.svc.cluster.local:2181"
            - name: KAFKA_LISTENERS
              value: "EXTERNAL://0.0.0.0:8098,INTERNAL://0.0.0.0:9092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "EXTERNAL://kafka2:8098,INTERNAL://kafka2.default.svc.cluster.local:9092"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "INTERNAL"
            - name: KAFKA_LOG_RETENTION_HOURS
              value: "48"
          volumeMounts:
            - mountPath: /var/lib/kafka
              name: kafka-data
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka2-pvc

